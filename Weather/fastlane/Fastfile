# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Run tests"
  lane :run_all_tests do
    scan
  end

  desc "Make changes on dev branch"
  lane :dev_branch do |options|
    check_dev_branch
    update_version(
      bump_type: options[:bump_type],
      version: options[:version]
    )
    push_to_git_remote
  end

  desc "Make changes on master branch"
  lane :master_branch do |options|
    check_master_branch
    add_tag(tag: options[:tag])
    release_tag
    run_all_tests
  end

  desc "Submit a new App Store Build to TestFlight"
  lane :submit_prod_build do |options|
    match(
      type: "appstore",
      readonly: true
      )
    gym(
      scheme: "Weather",
      clean: true
    )
    ENV["FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD"] = "yfmb-bbjz-nzcl-gilg"
    pilot
  end

######################### PRIVATE LANES #########################

desc "Update and commit build and version numbers"
  private_lane :update_version do |options|
    if options[:bump_type] 
      increment_version_number(
        bump_type: options[:bump_type]
      ) 
      increment_build_number(build_number: "1")
    elsif options[:version]
      increment_version_number(
        version_number: options[:version]
      )
      increment_build_number(build_number: "1")
    else
      increment_build_number
    end
    commit_version_bump
  end

  desc "Check if dev is current git branch"
  private_lane :check_dev_branch do
    if git_branch != "develop"
      UI.user_error! "Error: Please checkout dev branch"
    end
  end

  desc "Check if master is current git branch"
  private_lane :check_master_branch do
    if git_branch != "master"
      UI.user_error! "Error: Please checkout master branch"
    end
  end

  desc "Add git tag"
  private_lane :add_tag do |options|
    tagMessage = prompt(
      text: "Tag message: "
    )
    if options[:tag]
      add_git_tag(
        tag: options[:tag],
        message: tagMessage
        )
    else
      version = get_version_number(xcodeproj: "Weather.xcodeproj")
      add_git_tag(
        tag: "v" + version,
        message: tagMessage
      )
      ENV["TAG"] = "v" + version
    end
    push_git_tags
  end

  desc "Make release tag"
  private_lane :release_tag do
    releaseDescription = prompt(
      text: "Release tag description: ",
      multi_line_end_keyword: "END"
    )
    set_github_release(
      repository_name: "ilyabochkov1331801/Weather-SwiftUI-Combine",
      api_token: "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",
      name: ENV["TAG"],
      tag_name: ENV["TAG"],
      description: releaseDescription
    )
  end

end